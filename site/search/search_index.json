{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"alvaro/","text":"Tarea 2: Creaci\u00f3n del repositorio de Hugo Papermod por Alvaro San Juan - ASIR2 En esta actividad vamos a crear una nueva p\u00e1gina web que use Hugo como base para funcionar y que use el estilo de Papermod Preparaci\u00f3n de Hugo Para poder hacer el repositorio usando hugo tendremos que instalar hugo, para ello tenemos que ir al GitHub de Hugo, entrar en versiones y luego ir a la p\u00e1gina 2 para encontrar la v0.135 Elegimos el archivo de Linux AMD64.deb y copiamos su enlace, con el enlace copiado vamos a ir a VS code conectado en remoto de Debian dentro del fichero \"repositorios\". Usaremos en el terminal wget (Link) para instalar el archivo. Ahora que tenemos el archivo vamos a ir al root (solo necesario para instalar) y hacemos apt install del archivo hugo v0.135. Creaci\u00f3n del repositorio Papermod Ahora que tenemos todo instalado revisaremos el GitHub en la Wiki, en la secci\u00f3n de instalaci\u00f3n. En esta secci\u00f3n tendremos una gu\u00eda de como instalar el Papermod. Primero crearemos el nuevo sitio Hugo con hugo new site (Nombre), es opcional pero no recomendado usar --format yaml para el sitio. Papermod lo recomienda por lo que vamos a usarlo. Entraremos en el nuevo fichero con cd y luego usaremos git submodule add como se pide en el metodo 2 recomendado por Papermod. Al hacer esto nos dir\u00e1 que el directorio no es un repositorio. Usaremos git init para transformar el directorio en un repositorio. Ahora s\u00ed usaremos submodule add y despues los git submodules update / git submodule init. Dentro del repositorio crearemos una carpeta llamada posts dentro de content, dentro de content/posts crearemos carpetas para los posts, y dentro de estas carpetas pondremos los nuevos posts. Estructura: content/posts/postname/post.md Es importante indicar que se debe usar la estructura de yaml que se indica en la p\u00e1gina web de Papermod, dentro del hugo.yaml. Ahora que est\u00e1 configurado todo tendremos que usar el comando de hugo server --bind (IP) para que hugo nos cre\u00e9 la p\u00e1gina web con su propio servidor localhost. Este es el aspecto: Papermod en GitHub Como ya est\u00e1 creado la p\u00e1gina web tendremos que subirlo a GitHub, para subirlo tendremos que crear un repositorio en GitHub con el mismo nombre del repositorio en VS code. En el terminal pondremos git add y git commit, tambi\u00e9n git remote origin (Link del repositorio) y git push. Este es el resultado final en GitHub (ignora el workflow) Ahora toca crear la p\u00e1gina web en GitHub, para ello tenemos que poner como source el GitHub Actions. Buscaremos en GitHub todos los posibles workflows disponibles, entre estos tenemos que buscar Hugo. Al presionar configure nos mostrar\u00e1 un modelo de Workflows especializado en Hugo, lo crearemos y se a\u00f1adir\u00e1 directamente al repositorio. (ES IMPORTANTE HACER UN GIT PULL DESPUES DE CREAR EL WORKFLOW O ESTAR\u00c1N DESINCRONIZAR\u00c1) Como podemos ver funciona la p\u00e1gina web. Despliegue en CloudFlare Crearemos una p\u00e1gina en Work & Pages (ES IMPORTANTE A\u00d1ADIR EL REPOSITORIO EN CLOUDFLARE), seleccionando el repositorio y poniendo la configuraci\u00f3n necesaria. Ponemos como modulo el de Hugo, quitamos la instalaci\u00f3n de Hugo y pondremos que /public sea la carpeta raiz. Ademas vamos a crear una variable que sea HUGO_VERSION 0.135. La p\u00e1gina ya ha sido creada y funciona.","title":"Alvaro"},{"location":"alvaro/#tarea-2-creacion-del-repositorio-de-hugo-papermod","text":"por Alvaro San Juan - ASIR2 En esta actividad vamos a crear una nueva p\u00e1gina web que use Hugo como base para funcionar y que use el estilo de Papermod","title":"Tarea 2: Creaci\u00f3n del repositorio de Hugo Papermod"},{"location":"alvaro/#preparacion-de-hugo","text":"Para poder hacer el repositorio usando hugo tendremos que instalar hugo, para ello tenemos que ir al GitHub de Hugo, entrar en versiones y luego ir a la p\u00e1gina 2 para encontrar la v0.135 Elegimos el archivo de Linux AMD64.deb y copiamos su enlace, con el enlace copiado vamos a ir a VS code conectado en remoto de Debian dentro del fichero \"repositorios\". Usaremos en el terminal wget (Link) para instalar el archivo. Ahora que tenemos el archivo vamos a ir al root (solo necesario para instalar) y hacemos apt install del archivo hugo v0.135.","title":"Preparaci\u00f3n de Hugo"},{"location":"alvaro/#creacion-del-repositorio-papermod","text":"Ahora que tenemos todo instalado revisaremos el GitHub en la Wiki, en la secci\u00f3n de instalaci\u00f3n. En esta secci\u00f3n tendremos una gu\u00eda de como instalar el Papermod. Primero crearemos el nuevo sitio Hugo con hugo new site (Nombre), es opcional pero no recomendado usar --format yaml para el sitio. Papermod lo recomienda por lo que vamos a usarlo. Entraremos en el nuevo fichero con cd y luego usaremos git submodule add como se pide en el metodo 2 recomendado por Papermod. Al hacer esto nos dir\u00e1 que el directorio no es un repositorio. Usaremos git init para transformar el directorio en un repositorio. Ahora s\u00ed usaremos submodule add y despues los git submodules update / git submodule init. Dentro del repositorio crearemos una carpeta llamada posts dentro de content, dentro de content/posts crearemos carpetas para los posts, y dentro de estas carpetas pondremos los nuevos posts. Estructura: content/posts/postname/post.md Es importante indicar que se debe usar la estructura de yaml que se indica en la p\u00e1gina web de Papermod, dentro del hugo.yaml. Ahora que est\u00e1 configurado todo tendremos que usar el comando de hugo server --bind (IP) para que hugo nos cre\u00e9 la p\u00e1gina web con su propio servidor localhost. Este es el aspecto:","title":"Creaci\u00f3n del repositorio Papermod"},{"location":"alvaro/#papermod-en-github","text":"Como ya est\u00e1 creado la p\u00e1gina web tendremos que subirlo a GitHub, para subirlo tendremos que crear un repositorio en GitHub con el mismo nombre del repositorio en VS code. En el terminal pondremos git add y git commit, tambi\u00e9n git remote origin (Link del repositorio) y git push. Este es el resultado final en GitHub (ignora el workflow) Ahora toca crear la p\u00e1gina web en GitHub, para ello tenemos que poner como source el GitHub Actions. Buscaremos en GitHub todos los posibles workflows disponibles, entre estos tenemos que buscar Hugo. Al presionar configure nos mostrar\u00e1 un modelo de Workflows especializado en Hugo, lo crearemos y se a\u00f1adir\u00e1 directamente al repositorio. (ES IMPORTANTE HACER UN GIT PULL DESPUES DE CREAR EL WORKFLOW O ESTAR\u00c1N DESINCRONIZAR\u00c1) Como podemos ver funciona la p\u00e1gina web.","title":"Papermod en GitHub"},{"location":"alvaro/#despliegue-en-cloudflare","text":"Crearemos una p\u00e1gina en Work & Pages (ES IMPORTANTE A\u00d1ADIR EL REPOSITORIO EN CLOUDFLARE), seleccionando el repositorio y poniendo la configuraci\u00f3n necesaria. Ponemos como modulo el de Hugo, quitamos la instalaci\u00f3n de Hugo y pondremos que /public sea la carpeta raiz. Ademas vamos a crear una variable que sea HUGO_VERSION 0.135. La p\u00e1gina ya ha sido creada y funciona.","title":"Despliegue en CloudFlare"},{"location":"bolcheviques/","text":"La Revoluci\u00f3n Bolchevique La Revoluci\u00f3n Bolchevique , tambi\u00e9n conocida como la Revoluci\u00f3n de Octubre , fue un evento fundamental en la historia del siglo XX que marc\u00f3 el inicio de la instauraci\u00f3n del comunismo en Rusia y la creaci\u00f3n de la Uni\u00f3n de Rep\u00fablicas Socialistas Sovi\u00e9ticas (URSS) . Tuvo lugar en octubre de 1917 seg\u00fan el calendario juliano (noviembre seg\u00fan el gregoriano) y fue liderada por el Partido Bolchevique , encabezado por Vlad\u00edmir Lenin Contexto La revoluci\u00f3n ocurri\u00f3 en el marco de la Primera Guerra Mundial (1914-1918) y tras a\u00f1os de descontento con el r\u00e9gimen zarista: Desigualdad social : Rusia era un imperio agrario con una gran mayor\u00eda de campesinos pobres y una peque\u00f1a \u00e9lite aristocr\u00e1tica. Fracaso de la Revoluci\u00f3n de 1905 : Aunque provoc\u00f3 reformas como la creaci\u00f3n de la Duma (parlamento), el zar Nicol\u00e1s II mantuvo un poder autoritario. Primera Guerra Mundial : Rusia sufri\u00f3 enormes p\u00e9rdidas humanas y econ\u00f3micas, exacerbando el hambre, la pobreza y el descontento popular. Revoluci\u00f3n de Febrero de 1917 : El zar fue derrocado y se instal\u00f3 un gobierno provisional liderado por Aleksandr K\u00e9renski, que no logr\u00f3 estabilizar la situaci\u00f3n ni retirarse de la guerra. Desarrollo de la Revoluci\u00f3n de Octubre Liderazgo de los bolcheviques : Este grupo marxista radical, liderado por Lenin y Le\u00f3n Trotski, promovi\u00f3 una revoluci\u00f3n socialista que eliminara al gobierno provisional. Su lema principal era \"Paz, pan y tierra\" . Asalto al Palacio de Invierno : El 7 de noviembre de 1917, los bolcheviques tomaron el control de los principales centros de poder en Petrogrado (hoy San Petersburgo), derrocando al gobierno provisional. Consecuencias Fin del sistema zarista : Se aboli\u00f3 la monarqu\u00eda y se estableci\u00f3 un sistema socialista. Inicio de la guerra civil rusa (1918-1921) : Los \"rojos\" (bolcheviques) lucharon contra los \"blancos\" (mon\u00e1rquicos, liberales y extranjeros), consolidando su poder tras la victoria. Creaci\u00f3n de la URSS en 1922 : El r\u00e9gimen bolchevique reorganiz\u00f3 el pa\u00eds como un estado comunista. Impacto global : La revoluci\u00f3n inspir\u00f3 movimientos comunistas en todo el mundo y polariz\u00f3 la pol\u00edtica internacional durante d\u00e9cadas. La Revoluci\u00f3n Bolchevique es considerada un hito que transform\u00f3 el curso del siglo XX al dar origen al primer estado socialista de la historia.","title":"Bolcheviques"},{"location":"bolcheviques/#la-revolucion-bolchevique","text":"La Revoluci\u00f3n Bolchevique , tambi\u00e9n conocida como la Revoluci\u00f3n de Octubre , fue un evento fundamental en la historia del siglo XX que marc\u00f3 el inicio de la instauraci\u00f3n del comunismo en Rusia y la creaci\u00f3n de la Uni\u00f3n de Rep\u00fablicas Socialistas Sovi\u00e9ticas (URSS) . Tuvo lugar en octubre de 1917 seg\u00fan el calendario juliano (noviembre seg\u00fan el gregoriano) y fue liderada por el Partido Bolchevique , encabezado por Vlad\u00edmir Lenin","title":"La Revoluci\u00f3n Bolchevique"},{"location":"bolcheviques/#contexto","text":"La revoluci\u00f3n ocurri\u00f3 en el marco de la Primera Guerra Mundial (1914-1918) y tras a\u00f1os de descontento con el r\u00e9gimen zarista: Desigualdad social : Rusia era un imperio agrario con una gran mayor\u00eda de campesinos pobres y una peque\u00f1a \u00e9lite aristocr\u00e1tica. Fracaso de la Revoluci\u00f3n de 1905 : Aunque provoc\u00f3 reformas como la creaci\u00f3n de la Duma (parlamento), el zar Nicol\u00e1s II mantuvo un poder autoritario. Primera Guerra Mundial : Rusia sufri\u00f3 enormes p\u00e9rdidas humanas y econ\u00f3micas, exacerbando el hambre, la pobreza y el descontento popular. Revoluci\u00f3n de Febrero de 1917 : El zar fue derrocado y se instal\u00f3 un gobierno provisional liderado por Aleksandr K\u00e9renski, que no logr\u00f3 estabilizar la situaci\u00f3n ni retirarse de la guerra.","title":"Contexto"},{"location":"bolcheviques/#desarrollo-de-la-revolucion-de-octubre","text":"Liderazgo de los bolcheviques : Este grupo marxista radical, liderado por Lenin y Le\u00f3n Trotski, promovi\u00f3 una revoluci\u00f3n socialista que eliminara al gobierno provisional. Su lema principal era \"Paz, pan y tierra\" . Asalto al Palacio de Invierno : El 7 de noviembre de 1917, los bolcheviques tomaron el control de los principales centros de poder en Petrogrado (hoy San Petersburgo), derrocando al gobierno provisional.","title":"Desarrollo de la Revoluci\u00f3n de Octubre"},{"location":"bolcheviques/#consecuencias","text":"Fin del sistema zarista : Se aboli\u00f3 la monarqu\u00eda y se estableci\u00f3 un sistema socialista. Inicio de la guerra civil rusa (1918-1921) : Los \"rojos\" (bolcheviques) lucharon contra los \"blancos\" (mon\u00e1rquicos, liberales y extranjeros), consolidando su poder tras la victoria. Creaci\u00f3n de la URSS en 1922 : El r\u00e9gimen bolchevique reorganiz\u00f3 el pa\u00eds como un estado comunista. Impacto global : La revoluci\u00f3n inspir\u00f3 movimientos comunistas en todo el mundo y polariz\u00f3 la pol\u00edtica internacional durante d\u00e9cadas. La Revoluci\u00f3n Bolchevique es considerada un hito que transform\u00f3 el curso del siglo XX al dar origen al primer estado socialista de la historia.","title":"Consecuencias"},{"location":"rodrigo/","text":"Instalaci\u00f3n y Configuraci\u00f3n de Hugo Voy a crear una p\u00e1gina en Hugo mediante visual studio code y voy a desplegarla mediante comandos en Github y Netlify. 1. Instalaci\u00f3n de Hugo Instalo la versi\u00f3n extendida de Hugo mediante el comando mostrado. 2. Creaci\u00f3n de un nuevo proyecto en Hugo Utilizo el comando: bash hugo new site <actividad22_2_RAU> Esto generar\u00e1 la estructura inicial del proyecto. 3. Configuraci\u00f3n del repositorio en GitHub Me meto a GitHub y creo un nuevo repositorio vac\u00edo con el nombre de la actividad. Clonar el repositorio : Para clonar este repositorio utilizo este comando bash git clone https://github.com/RodrigoGColl/actividad22_1_RAU.git 4. Gesti\u00f3n de temas en Hugo A\u00f1ado un tema al proyecto : Descargo el tema ananke y lo a\u00f1ado como subm\u00f3dulo: bash git submodule add <URL del tea de ananke> themes/<ananke> Configuraci\u00f3n del tema : A\u00f1ado la referencia al tema en el archivo de configuraci\u00f3n: bash theme = \"<ananke>\" Actualizaci\u00f3n del subm\u00f3dulo : Para la actualizaci\u00f3n del m\u00f3dulo ejecuto: bash git submodule init git submodule update Configuraci\u00f3n del \u00edndice As\u00ed he configurado el \u00edndice de la p\u00e1gina 5. Subida del proyecto a GitHub Preparar los cambios para subirlos : A\u00f1ado los archivos: bash git add . Confirmo los cambios: bash git commit -m \"lo subo\" Subo los cambios al repositorio: bash git push -u origin master 6. Despliegue en Netlify Vinculaci\u00f3n del repositorio en Netlify : Accedo a Netlify, creo un nuevo sitio desde un repositorio y selecciono el proyecto que he hecho. Configurar el dominio y desplegar el sitio : Ajusto las configuraciones necesarias para el dominio y el despliegue, seguir\u00e9 los siguientes pasos. Aqu\u00ed ya se ha completado","title":"Rodrigo"},{"location":"rodrigo/#instalacion-y-configuracion-de-hugo","text":"Voy a crear una p\u00e1gina en Hugo mediante visual studio code y voy a desplegarla mediante comandos en Github y Netlify.","title":"Instalaci\u00f3n y Configuraci\u00f3n de Hugo"},{"location":"rodrigo/#1-instalacion-de-hugo","text":"Instalo la versi\u00f3n extendida de Hugo mediante el comando mostrado.","title":"1. Instalaci\u00f3n de Hugo"},{"location":"rodrigo/#2-creacion-de-un-nuevo-proyecto-en-hugo","text":"Utilizo el comando: bash hugo new site <actividad22_2_RAU> Esto generar\u00e1 la estructura inicial del proyecto.","title":"2. Creaci\u00f3n de un nuevo proyecto en Hugo"},{"location":"rodrigo/#3-configuracion-del-repositorio-en-github","text":"Me meto a GitHub y creo un nuevo repositorio vac\u00edo con el nombre de la actividad. Clonar el repositorio : Para clonar este repositorio utilizo este comando bash git clone https://github.com/RodrigoGColl/actividad22_1_RAU.git","title":"3. Configuraci\u00f3n del repositorio en GitHub"},{"location":"rodrigo/#4-gestion-de-temas-en-hugo","text":"A\u00f1ado un tema al proyecto : Descargo el tema ananke y lo a\u00f1ado como subm\u00f3dulo: bash git submodule add <URL del tea de ananke> themes/<ananke> Configuraci\u00f3n del tema : A\u00f1ado la referencia al tema en el archivo de configuraci\u00f3n: bash theme = \"<ananke>\" Actualizaci\u00f3n del subm\u00f3dulo : Para la actualizaci\u00f3n del m\u00f3dulo ejecuto: bash git submodule init git submodule update Configuraci\u00f3n del \u00edndice As\u00ed he configurado el \u00edndice de la p\u00e1gina","title":"4. Gesti\u00f3n de temas en Hugo"},{"location":"rodrigo/#5-subida-del-proyecto-a-github","text":"Preparar los cambios para subirlos : A\u00f1ado los archivos: bash git add . Confirmo los cambios: bash git commit -m \"lo subo\" Subo los cambios al repositorio: bash git push -u origin master","title":"5. Subida del proyecto a GitHub"},{"location":"rodrigo/#6-despliegue-en-netlify","text":"Vinculaci\u00f3n del repositorio en Netlify : Accedo a Netlify, creo un nuevo sitio desde un repositorio y selecciono el proyecto que he hecho. Configurar el dominio y desplegar el sitio : Ajusto las configuraciones necesarias para el dominio y el despliegue, seguir\u00e9 los siguientes pasos. Aqu\u00ed ya se ha completado","title":"6. Despliegue en Netlify"},{"location":"rodrigo/#_1","text":"","title":""},{"location":"unai/","text":"Instalacion de mkdocs Buscamos los paquetes realizando una actualizaci\u00f3n. Instalaci\u00f3n de git. Python y Pip Instalaci\u00f3n de python y pip. Instalaci\u00f3n m\u00f3dulo gestor de entornos virtuales Creaci\u00f3n de un nuevo entorno virtual de Python. Mkdocs Instalaci\u00f3n de mkdocs. Creamos el directorio donde vamos a trabajar. Subimos el repositorio a GitHub. Instalamos los diferentes temas para la p\u00e1gina web.","title":"Unai"},{"location":"unai/#instalacion-de-mkdocs","text":"Buscamos los paquetes realizando una actualizaci\u00f3n. Instalaci\u00f3n de git.","title":"Instalacion de mkdocs"},{"location":"unai/#python-y-pip","text":"Instalaci\u00f3n de python y pip. Instalaci\u00f3n m\u00f3dulo gestor de entornos virtuales Creaci\u00f3n de un nuevo entorno virtual de Python.","title":"Python y Pip"},{"location":"unai/#mkdocs","text":"Instalaci\u00f3n de mkdocs. Creamos el directorio donde vamos a trabajar. Subimos el repositorio a GitHub. Instalamos los diferentes temas para la p\u00e1gina web.","title":"Mkdocs"}]}